apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: test
spec:
  selector:
    matchLabels:
      app: orders
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: orders
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "orders"
        dapr.io/app-port: "5001"
        dapr.io/app-protocol: "http"
        dapr.io/log-level: "debug"
        dapr.io/log-as-json: "true"
        dapr.io/app-ssl: "false"
        dapr.io/sidecar-cpu-limit: "300m"
        dapr.io/sidecar-cpu-request: "100m"
        dapr.io/sidecar-memory-limit: "1000Mi"
        dapr.io/sidecar-memory-request: "250Mi"
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: orders
          image: hpunetha/orders:latest
          imagePullPolicy: Always
          securityContext:
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 10001
              runAsGroup: 10001 
          resources:
            requests:
              cpu: 100m
              memory: 500Mi
            limits:
              cpu: 250m
              memory: 4Gi
          ports:
            - containerPort: 5001
          env:
            - name: APP_NAME
              value: orders

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: test
  labels:
    app: orders
spec:
  type: LoadBalancer
  selector:
    app: orders
  ports:
    - port: 81
      name: http
      targetPort: 5001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dapr-ingress
  namespace: test
  annotations:
    kubernetes.io/ingress.class: nginx
    appgw.ingress.kubernetes.io/backend-protocol: http
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    appgw.ingress.kubernetes.io/backend-path-prefix: "/"
    appgw.ingress.kubernetes.io/request-timeout: "60"
    appgw.ingress.kubernetes.io/use-private-ip: "true"
    appgw.ingress.kubernetes.io/health-probe-path: "/health"
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200"
spec:
  rules:
  - host: example.com
    http:
      paths:
      - path: /orders/*
        pathType: Prefix
        backend:
          service:
            name: orders
            port:
              number: 5001